import com.github.jengelman.gradle.plugins.shadow.ShadowPlugin
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id 'groovy'
    id 'project-report'
    id 'idea'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.2.2'
    id 'org.ajoberstar.git-publish' version '4.2.2'
    id 'com.github.node-gradle.node' version '7.0.2'
    id 'com.vanniktech.maven.publish' version "0.29.0"
}

apply plugin: ShadowPlugin

apply from: file('gradle/docs.gradle')
apply from: file('gradle/publish.gradle')
apply from: file('gradle/vuepress.gradle')
apply from: file('gradle/ghPages.gradle')
apply from: file('gradle/dependencies.gradle')

java {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

idea {
    project {
        languageLevel = '1.8'
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    // https://docs.gradle.org/8.8/userguide/performance.html#execute_tests_in_parallel
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1

    if (System.env.CI == 'true') {
        testLogging.showStandardStreams = true
        minHeapSize "1g"
        maxHeapSize "1g"
    }

    systemProperty 'shadowVersion', version

    // Required to test configuration cache in tests when using withDebug()
    // https://github.com/gradle/gradle/issues/22765#issuecomment-1339427241
    jvmArgs(
            "--add-opens", "java.base/java.util=ALL-UNNAMED",
            "--add-opens", "java.base/java.util.concurrent.atomic=ALL-UNNAMED",
            "--add-opens", "java.base/java.lang.invoke=ALL-UNNAMED",
            "--add-opens", "java.base/java.net=ALL-UNNAMED",
    )
}

tasks.named('shadowJar', ShadowJar) {
    from rootProject.file('LICENSE')
    from rootProject.file('NOTICE')
    enableRelocation true
}

tasks.named('ideaModule') {
    notCompatibleWithConfigurationCache("https://github.com/gradle/gradle/issues/13480")
}

tasks.register('downloadDependencies', Exec) {
    dependsOn configurations.testRuntimeClasspath
    commandLine 'echo', 'Downloaded all dependencies'
}
