apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory-publish'

group = 'com.github.jengelman.gradle.plugins'
def versionString = file('version.txt').text.trim()
version = versionString

ext.isSnapshot = version.endsWith("SNAPSHOT")

def pomConfig = {
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'jengelman'
            name 'John Engelman'
            email 'john.r.engelman@gmail.com'
        }
    }
}

publishing {
    publications {
        plugin(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Gradle plugin to combine dependencies into a single Jar. Port of Maven Shade.')
                root.children().last() + pomConfig
            }
        }
    }
}

artifactory {
    contextUrl = 'https://oss.jfrog.org/artifactory'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
        }
        defaults {
            publications 'plugin'
        }
    }
}

artifactoryPublish { task ->
    doFirst {
        if (!isSnapshot) {
            throw new GradleException('Cannot publish non-SNAPSHOT versions to OJO!')
        }
    }
    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(task)) {
            project.artifactory {
                publish {
                    repository {
                        username = bintrayUser
                        password = bintrayKey
                    }
                }
            }
        }
    }
}

bintrayUpload { task ->
    doFirst {
        if (isSnapshot) {
            throw new GradleException('Cannot publish SNAPSHOT versions to BinTray!')
        }
    }
    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(task)) {
            task.user = bintrayUser
            task.apiKey = bintrayKey
        }
    }
}

bintray {
    publications = ['plugin']
    pkg {
        repo = 'gradle-plugins'
        name = 'gradle-shadow-plugin'
        licenses = ['Apache-2.0']
        desc = 'Create uber-jar containing application code and dependencies.'
        labels = ['gradle', 'onejar', 'fatjar', 'uberjar', 'shade']
        websiteUrl = 'https://github.com/johnrengelman/shadow'
        issueTrackerUrl = 'https://github.com/johnrengelman/shadow/issues'
        vcsUrl = 'https://github.com/johnrengelman/shadow.git'
        version {
            vcsTag = versionString
            attributes = [
                    'gradle-plugin': 'com.github.johnrengelman.shadow:com.github.jengelman.gradle.plugins:shadow'
            ]
        }
    }
}
